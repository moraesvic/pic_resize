#!/usr/bin/env bash

############################################################
# DEFINITIONS

program_name="$(basename "$0")"
dir_name="$(dirname "$0")"

# This is the maximum number of pixels we will accept, either width
# or height. If picture is larger, it will be reduced proportionally

max_resolution_px=800

############################################################
# CHECK SANITY OF INPUT

function die {
	>&2 echo "$program_name : $1"
	exit 1
}

if [ $# -ne 1 ] ; then
	die "must be run with file argument"
fi

src_full_path="$1"

if [ ! -f "$src_full_path" \
	-o -z "$(file "$src_full_path" | grep image)" ] ; then
	die "$src_full_path is not an image file"
fi

# Let's get current resolution
# "file" command apparently does not work for all image types
#
# See https://superuser.com/questions/275502/how-to-get-information-about-an-image-picture-from-the-linux-command-line
#
# So we will have to use exiftool, which is not ideal, because it
# loads entire file. But it will stay for lack of a better
# alternative

resolution="$(exiftool "$src_full_path" 2> /dev/null | \
	sed -rn "s/^Image Size[^0-9]*([0-9]+x[0-9]+)$/\1/p")"

>&2 echo "File $src_full_path"
>&2 echo "Image resolution is $resolution"

# Now we will go to Python script. I would like to have a single
# file and less dependencies but Bash is really not suited for
# more complex stuff

proportion=$($dir_name/find_proportion.py "$resolution" "$max_resolution_px")

if [ $proportion = "100" ] ; then
	>&2 echo "Nothing to do here"
	exit 0
else
	>&2 echo "Dimensions must be reduced to $proportion % of original (in both axes)"
fi

# A little bit long-winded, but hopefully this will work for all
# kinds of files and paths
#
# TO DO : add an option to overwrite file
# TO DO : add an option to convert file to JPEG

src_base="$(basename "$src_full_path")"
src_path="$(dirname "$src_full_path")"

no_ext="${src_base%.*}"
extension="${src_base##*.}"
dest_full_path="$src_path/$no_ext.mini.$extension"

convert -resize "${proportion}%" "$src_full_path" "$dest_full_path"

############################################################
### PRINT STATISTICS OF SAVED SPACE ########################
############################################################

src_size=$(du -b "$src_full_path" | cut -f1)
dest_size=$(du -b "$dest_full_path" | cut -f1)

>&2 /usr/bin/env python3 \
	-c "print('Reduced to %.2f %% of original size' % ($dest_size / $src_size * 100) )"
